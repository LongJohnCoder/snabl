* add macro support
** name arity macros xxx:
*** process all passed in tokens
* add group support
** add Group form
*** eval separately
* add , support
** eval rest separately on each comma
* add ops PushCall PopCall
* exec funcs/macros without args immediately
** otherwise at end of expr or ,
* add optional func.parent_scope
** use as parent for begin
* precompile fimps
** compile rest on demand
* add jump op
** ssize_t nops
** update pc
* add drop/swap/reset ops
* add set/get_var ops
* add env.push/pop_scope
** update stack_begin in push
* add arg
** use union to differentiate between cases
* add recall op
** jump immediately
** remember scope iter and truncate before jump
* add code generation
** generate function
*** take env param
** snabl compile/build
** generate harness with env
** add OpType.emit_cpp fn
*** generate code to emit op on env bin
