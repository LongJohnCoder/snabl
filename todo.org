* add const optional<Imp> Fimp.imp
** add using Imp = std::function<>
* add forms_begin/end/imp constructors to Fimp
* implement Bin.compile
** add Form
*** union like Op
** add Fimp.forms
* add optional func.parent_scope
** use as parent for begin
* ---
* add jump op
** ssize_t nops
** update pc
* add eval(str) fn
** add Str type
** emit into ops
** use jump to skip
** nested run
* add drop/swap/reset ops
* add set/get_var ops
* add env.push/pop_scope
** update stack_begin in push
* add arg
** use union to differentiate between cases
* add Call with AFimpPtr/ScopePtr
* add recall op
** jump immediately
** remember scope iter and truncate before jump
* Disambiguate funcalls
** scan op stream backwards and build up args
*** throw error on fail
* Use ',', ';', '()' and '.' to separate expressions
